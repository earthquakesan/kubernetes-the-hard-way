# These tasks setup nodes for installation using kubeadm as described in 
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/
- name: add hostname.local entry for loopback
  lineinfile:
    path: /etc/hosts
    regex: "^127.0.0.1"
    create: yes
    line: "127.0.0.1 {{ ansible_hostname }} {{ ansible_hostname }}.local"
- name: Add necessary hosts to /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    create: yes
  with_items:
    - "192.168.5.11 master-1"
    - "192.168.5.12 master-2"
    - "192.168.5.21 worker-1"
    - "192.168.5.22 worker-2"
    - "192.168.5.30 lb"
- name: install resolvconf
  apt:
    name: resolvconf
- name: update DNS config
  lineinfile:
    path: "/etc/resolvconf/resolv.conf.d/head"
    line: "{{ item }}"
    create: yes
  loop:
    - "nameserver 8.8.8.8"
    - "nameserver 8.8.4.4"
- name: restart resolvconf
  service:
    name: resolvconf
    state: restarted
    enabled: yes
- name: install necessary packages
  apt:
    name: "{{ item }}"
  loop: 
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - pass
- name: Add an apt key for docker-ce (debian)
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
- name: get release name
  command: lsb_release -cs
  register: release_name
- name: add docker repository to apt (debian)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ release_name.stdout }} stable"
    state: present
- name: install docker packages
  apt:
    name: "{{ item }}"
  loop: 
    - docker-ce
    - docker-ce-cli
    - containerd.io
- name: Add the br_netfilter module
  modprobe:
    name: br_netfilter
    state: present
- name: copy k8s.conf to /etc/sysctl.d/k8s.conf
  copy:
    src: "k8s.conf"
    dest: "/etc/sysctl.d/k8s.conf"
- name: reload sysctl
  command: sysctl --system
- name: install apt-transport-https and curl
  apt:
    name:
      - apt-transport-https
      - curl
- name: Add an apt key for apt.kubernetes.io (debian)
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
- name: add docker apt.kubernetes.io to apt (debian)
  apt_repository:
    repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
- name: install kubelet kubeadm and kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    update_cache: yes
- name: pin the kubelet kubeadm and kubectl versions
  command: apt-mark hold kubelet kubeadm kubectl
- name: disable swap
  command: swapoff -a
# TODO: ip route add 10.96.0.0/16 dev eth1
# https://github.com/weaveworks/weave/issues/3420
# https://github.com/kubernetes/kubeadm/issues/102#issuecomment-291532883